<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RSE at Sheffield</title><link>http://rse.shef.ac.uk/</link><description>RSE at Sheffield</description><atom:link href="http://rse.shef.ac.uk/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 04 May 2017 19:00:34 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Job validation with Grid Engine: false negatives</title><link>http://rse.shef.ac.uk/blog/sge-job-validation-2/</link><dc:creator>Will Furnass</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="http://rse.shef.ac.uk/blog/sge-job-validation"&gt;a previous post&lt;/a&gt;, 
I noted that if you're not sure if a Sun Grid Engine (SGE) job can ever run on an &lt;a href="https://en.wikipedia.org/wiki/Supercomputer"&gt;HPC cluster&lt;/a&gt;
you can perform 'dry-run' job validation:
by passing &lt;code&gt;-w v&lt;/code&gt; as arguments to &lt;code&gt;qrsh&lt;/code&gt;/&lt;code&gt;qrshx&lt;/code&gt;/&lt;code&gt;qsh&lt;/code&gt;/&lt;code&gt;qalter&lt;/code&gt; you can ask the SGE scheduler software 
if your job could ever run if the cluster were entirely empty of other jobs.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;    qsub -pe smp 2 -l rmem=10000G -w v myjob.sge
&lt;/pre&gt;


&lt;p&gt;would most likely tell you that your job could not be run in any of the cluster's job queues 
(due to the size of the resource request).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But beware:&lt;/strong&gt; 
as mentioned in my earlier post 
this his job validation mechanism sometimes results in &lt;em&gt;false negatives&lt;/em&gt; i.e. you are told that a job cannot run even though though in reality it can.&lt;br&gt;
This is something that the HPC sysadmin team at the University of Leeds alerted us to.&lt;/p&gt;
&lt;p&gt;Here's an example of a false positive (using our &lt;a href="https://docs.hpc.shef.ac.uk/en/latest/sharc/"&gt;ShARC&lt;/a&gt; cluster.&lt;br&gt;
If you ask for a single-core interactive session with access to four GPUs then dry-run validation fails:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;    [te1st@sharc-login1 ~]$ qrsh -l gpu=4 -w v
    ...
    verification: no suitable queues
&lt;/pre&gt;


&lt;p&gt;yet (without validation) the resource request can be satisfied:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;    [te1st@sharc-login1 ~]$ qrsh -l gpu=4 
    [te1st@sharc-node100 ~]$   # works!
&lt;/pre&gt;


&lt;p&gt;The &lt;strong&gt;reason for this&lt;/strong&gt; appears to be that the validation is performed 
without running any &lt;a href="http://gridscheduler.sourceforge.net/htmlman/htmlman1/jsv.html"&gt;Job Submission Verifier&lt;/a&gt; (JSV) scripts.
These scripts are run (typically on the SGE master machine) on every submitted job to 
centrally modify or reject job requests post-submission.&lt;/p&gt;
&lt;p&gt;On ShARC the main JSV script changes a job's &lt;a href="http://gridscheduler.sourceforge.net/htmlman/htmlman5/project.html?pathrev=V62u5_TAG"&gt;Project&lt;/a&gt; 
from a generic one 
to &lt;code&gt;gpu&lt;/code&gt; 
if &lt;code&gt;x &amp;gt; 0&lt;/code&gt; GPUs have been requested using &lt;code&gt;-l gpu=x&lt;/code&gt;.
The job can then be assigned to (GPU-equipped) nodes associated with that project.
So, if the JSV is not run before job validation (using &lt;code&gt;-w v&lt;/code&gt;) then 
validation of jobs that request GPUs will fail as 
no nodes (more accurately &lt;em&gt;queue instances&lt;/em&gt;) will be found that can satisfy the resource request 
given the (default) project of jobs.  &lt;/p&gt;
&lt;p&gt;The workaround here is to explicitly request a Project (using e.g. &lt;code&gt;-P gpu&lt;/code&gt;) 
when trying to validate a job using &lt;code&gt;-w v&lt;/code&gt; 
i.e. partly duplicate the logic in the (bypassed) JSV,
but this requires that you know have read and understood the JSV.&lt;br&gt;
This is something that users may not want to do and adds complexity, 
when the whole point of investigating job validation in the first place was to 
find a simple way by which users could check if if their jobs could run on a given SGE cluster.&lt;/p&gt;
&lt;p&gt;In summary, SGE's job validation mechanism is not a fool-proof option for users as 
it does not take into consideration changes made to a job by Job Submission Verifier scripts post-submission.&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/sge-job-validation-2/</guid><pubDate>Wed, 19 Apr 2017 10:15:00 GMT</pubDate></item><item><title>Introduction to Modern Fortran</title><link>http://rse.shef.ac.uk/blog/ModernFortran2017/</link><dc:creator>Mike Croucher</dc:creator><description>&lt;div&gt;&lt;p&gt;In February, the Research Software Engineering group hosted an ‘Introduction to Modern Fortran Course’ taught by EPSRC Research Software Engineering Fellow, &lt;a href="http://www.walkingrandomly.com/?p=6006"&gt;Ian Bush&lt;/a&gt;. The course material is available at &lt;a href="https://www.oerc.ox.ac.uk/introduction-modern-fortran-course-materials"&gt;https://www.oerc.ox.ac.uk/introduction-modern-fortran-course-materials&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the day, Ian recommended a bunch of books (below)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://rse.shef.ac.uk/images/fortran_books.jpg"&gt;&lt;/p&gt;
&lt;p&gt;We’ve been working with the University library and I’m happy to announce that all of these are now available to borrow. Search for them using the &lt;a href="https://find.shef.ac.uk/primo_library/libweb/action/search.do"&gt;University catalogue&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/ModernFortran2017/</guid><pubDate>Wed, 19 Apr 2017 10:12:51 GMT</pubDate></item><item><title>Determining MPI placement on the HPC clusters</title><link>http://rse.shef.ac.uk/blog/mpi_placement/</link><dc:creator>Mike Croucher</dc:creator><description>&lt;div&gt;&lt;p&gt;Say you request a 16 slot MPI job on ShARC with 3GB per-process using a submission script like the one below:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#Tell the scheduler that maximum runtime is 1 hour&lt;/span&gt;
&lt;span class="c1"&gt;#$ -l h_rt=1:00:00&lt;/span&gt;
&lt;span class="c1"&gt;#Request 16 slots&lt;/span&gt;
&lt;span class="c1"&gt;#$ -pe mpi 16&lt;/span&gt;
&lt;span class="c1"&gt;#Request 3 Gigabytes per slot&lt;/span&gt;
&lt;span class="c1"&gt;#$ -l rmem=3G&lt;/span&gt;

&lt;span class="c1"&gt;#Load gcc 4.9.4 and OpenMPI 2.0.1&lt;/span&gt;
module load dev/gcc/4.9.4
module load mpi/openmpi/2.0.1/gcc-4.9.4

mpirun  ./MPI_hello_world
&lt;/pre&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The scheduler is free to decide where on the system your 16 slots get placed. You may have all 16 slots running on one node, one slot per node for 16 nodes or anything in between. The exact placement of your jobs may affect runtime.&lt;/p&gt;
&lt;p&gt;We can find out where the scheculer placed your MPI processes using the &lt;code&gt;$PE_HOSTFILE&lt;/code&gt; environment variable. When your job starts running, this points to a file that contains placement information. We make use of it in a submission script as follows&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#Tell the scheduler that maximum runtime is 1 hour&lt;/span&gt;
&lt;span class="c1"&gt;#$ -l h_rt=1:00:00&lt;/span&gt;
&lt;span class="c1"&gt;#Request 16 slots&lt;/span&gt;
&lt;span class="c1"&gt;#$ -pe mpi 16&lt;/span&gt;
&lt;span class="c1"&gt;#Request 3 Gigabytes per slot&lt;/span&gt;
&lt;span class="c1"&gt;#$ -l rmem=3G&lt;/span&gt;

&lt;span class="c1"&gt;#Load gcc 4.9.4 and OpenMPI 2.0.1&lt;/span&gt;
module load dev/gcc/4.9.4
module load mpi/openmpi/2.0.1/gcc-4.9.4

&lt;span class="c1"&gt;#Put placement information into node_info.txt&lt;/span&gt;
cat &lt;span class="nv"&gt;$PE_HOSTFILE&lt;/span&gt;  &amp;gt; node_info.txt

mpirun  ./MPI_hello_world
&lt;/pre&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;You'll now get a file called &lt;code&gt;node_info.txt&lt;/code&gt; that contains information about which nodes your MPI slots were placed. For example&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sharc-node031.shef.ac.uk 1 shortint.q@sharc-node031.shef.ac.uk UNDEFINED
sharc-node069.shef.ac.uk 1 shortint.q@sharc-node069.shef.ac.uk UNDEFINED
sharc-node112.shef.ac.uk 1 shortint.q@sharc-node112.shef.ac.uk UNDEFINED
sharc-node108.shef.ac.uk 1 shortint.q@sharc-node108.shef.ac.uk UNDEFINED
sharc-node081.shef.ac.uk 1 shortint.q@sharc-node081.shef.ac.uk UNDEFINED
sharc-node090.shef.ac.uk 2 shortint.q@sharc-node090.shef.ac.uk UNDEFINED
sharc-node080.shef.ac.uk 2 shortint.q@sharc-node080.shef.ac.uk UNDEFINED
sharc-node050.shef.ac.uk 3 shortint.q@sharc-node050.shef.ac.uk UNDEFINED
sharc-node059.shef.ac.uk 4 shortint.q@sharc-node059.shef.ac.uk UNDEFINED
&lt;/pre&gt;


&lt;p&gt;In the above example, 4 slots were placed on node059, 3 slots on node 50, 2 slots on nodes 080 and 090 and one slot on the other listed nodes. &lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/mpi_placement/</guid><pubDate>Sat, 01 Apr 2017 16:03:00 GMT</pubDate></item><item><title>Job validation with Grid Engine</title><link>http://rse.shef.ac.uk/blog/sge-job-validation/</link><dc:creator>Will Furnass</dc:creator><description>&lt;div&gt;&lt;p&gt;(&lt;strong&gt;Edit&lt;/strong&gt;: caveats are listed in a &lt;a href="http://rse.shef.ac.uk/blog/sge-job-validation-2"&gt;more recent post&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Computer cluster job scheduling software is fantastic at managing resources 
and permitting many jobs to run efficiently and simultaneously.&lt;br&gt;
However, schedulers aren't always great at giving end-users feedback 
when things go wrong.  &lt;/p&gt;
&lt;p&gt;For example, on our ShARC cluster, which runs the (Son of) Grid Engine (SGE) scheduler, 
if you request a longer run-time than is permitted by any of the cluster's job queue configurations 
then your job will sit there queueing indefinitely until you or someone else deletes it.&lt;br&gt;
For example, let's use &lt;a href="http://docs.hpc.shef.ac.uk/en/latest/hpc/scheduler/sge.html#running-batch-jobs-on-iceberg"&gt;qsub&lt;/a&gt; 
to submit a job where we ask for 1000 hours of run time and 4 GiB of RAM:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;will@mysofa ~&lt;span class="o"&gt;]&lt;/span&gt;$ ssh sharc
...
&lt;span class="o"&gt;[&lt;/span&gt;te1st@sharc-login1 ~&lt;span class="o"&gt;]&lt;/span&gt;$ qsub -l &lt;span class="nv"&gt;h_rt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;:00:00 -l &lt;span class="nv"&gt;rmem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4G -m bea -M w.furnass@sheffield.ac.uk -N longtask myjobscript.sge

Your job &lt;span class="m"&gt;236268&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"STDIN"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; has been submitted
&lt;span class="o"&gt;[&lt;/span&gt;te1st@sharc-login1 ~&lt;span class="o"&gt;]&lt;/span&gt;$ qstat -u &lt;span class="nv"&gt;$USER&lt;/span&gt;
job-ID  prior   name       user         state submit/start at     queue                          slots ja-task-ID 
-----------------------------------------------------------------------------------------------------------------
 &lt;span class="m"&gt;217834&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.00000 longtask   te1st        qw    &lt;span class="m"&gt;03&lt;/span&gt;/20/2017 &lt;span class="m"&gt;10&lt;/span&gt;:48:39                                    &lt;span class="m"&gt;1&lt;/span&gt;        
&lt;/pre&gt;


&lt;p&gt;Job 217834 will now sit queuing forever.&lt;br&gt;
Not only will you not be told why, 
you won't be given &lt;em&gt;any&lt;/em&gt; notification that the job will not run.&lt;/p&gt;
&lt;p&gt;In situations like this it can be useful to ask the scheduler to validate a job.&lt;br&gt;
One way of doing this is to run '&lt;code&gt;qalter -w v &amp;lt;myjobid&amp;gt;&lt;/code&gt;' after job submission 
if say you think that a job has now been queueing for longer 
than previously-submitted jobs of a similar nature:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;[te1st@sharc-login1 ~]$ qalter -w v 217834
Job 217834 (-l h_rt=3600000) cannot run in queue "flybrain.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "gpu.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "gen2reg.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "rse.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "gpu-vis.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "insigneo-polaris.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "interactive.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "shortint.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "all.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "evolgen.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "rse-training.q" because of cluster queue
Job 217834 (-l h_rt=3600000) cannot run in queue "cstest.q" because of cluster queue
verification: no suitable queues
&lt;/pre&gt;


&lt;p&gt;What this '&lt;code&gt;qalter -w v &amp;lt;myjobid&amp;gt;&lt;/code&gt;' command does is check to see whether the job could run 
in any of the job queues on the cluster 
if the cluster were free of other jobs. &lt;/p&gt;
&lt;p&gt;The last line of output is key: 
our job will never be run given the current cluster configuration.&lt;br&gt;
Looking above that, we can see that it cannot run in any of the general-purpose job queues 
(such as &lt;code&gt;all.q&lt;/code&gt;) and 
there is specific mention of our 1000 hour (3600000s) run-time resource request.&lt;br&gt;
We can therefore deduce that our run-time resource request wasn't satisfiable.&lt;/p&gt;
&lt;h3&gt;Modifying a resource request post-submission&lt;/h3&gt;
&lt;p&gt;Once we know that our job can't run we could then delete our job...&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;te1st@sharc-login1 ~&lt;span class="o"&gt;]&lt;/span&gt;$ qdel &lt;span class="m"&gt;217834&lt;/span&gt; 
te1st has deleted job &lt;span class="m"&gt;217834&lt;/span&gt; 
&lt;/pre&gt;


&lt;p&gt;...then consult the cluster's documentation to discover the maximum possible run-time and resubmit using more sensible resource requests.  &lt;/p&gt;
&lt;p&gt;Alternatively we can use &lt;strong&gt;qalter&lt;/strong&gt; to modify the resource requests associated with a queueing job:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;qalter -l &lt;span class="nv"&gt;h_rt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;96&lt;/span&gt;:00:00 -l &lt;span class="nv"&gt;rmem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4G &lt;span class="m"&gt;217834&lt;/span&gt; 
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: using &lt;code&gt;qalter&lt;/code&gt; in this fashion will change &lt;strong&gt;all&lt;/strong&gt; resource requests for the job so here we need to re-specify the &lt;code&gt;rmem&lt;/code&gt; request.&lt;/p&gt;
&lt;h3&gt;Job validation at submission time&lt;/h3&gt;
&lt;p&gt;You can also perform the same type of job validation &lt;strong&gt;at job submission time&lt;/strong&gt; using &lt;code&gt;-w v&lt;/code&gt; e.g.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;qsub -w v -l &lt;span class="m"&gt;1000&lt;/span&gt;:00:00 -l &lt;span class="nv"&gt;rmem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4G myjobscript.sge
&lt;/pre&gt;


&lt;p&gt;This won't actually submit your job; it just performs validation.&lt;/p&gt;
&lt;h3&gt;Why is validation not performed by default?&lt;/h3&gt;
&lt;p&gt;You may ask why such validation is not enabled by default for all jobs; 
one reason for this is that it is believed it would place undue burden on the scheduler.&lt;/p&gt;
&lt;p&gt;Another is that sometimes a validation attempt results in a false negative that can be difficult to automatically identify
(&lt;strong&gt;edit&lt;/strong&gt;: see this &lt;a href="http://rse.shef.ac.uk/blog/sge-job-validation-2"&gt;more recent post&lt;/a&gt; for details).&lt;/p&gt;
&lt;h3&gt;Other types of resources&lt;/h3&gt;
&lt;p&gt;If you repeat the experiment outlined above but 
instead of requesting 1000 hours of runtime 
you ask for 100 GPUs, 9999GB of RAM or 10000 cores 
you'll observe the same behaviour: jobs that make requests unsatisfiable under the current cluster configuration can be submitted but will never run.&lt;/p&gt;
&lt;p&gt;Again, job validation can help here but depending on the type of resource the validation error messages can be more or less cryptic.&lt;br&gt;
For example, if you try to validate a 100000-'slot' (core) MPI job using &lt;code&gt;-w v&lt;/code&gt; you get the following:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;qsub -pe mpi 100000 -w v somejob.sge
...
Job 311838 cannot run in PE "mpi" because it only offers 0 slots
&lt;/pre&gt;


&lt;p&gt;This is rather misleading but the mention of 'slots' should prompt you to check the number of cores you've requested is sensible.&lt;/p&gt;
&lt;h3&gt;'Poke' validation: consider the current cluster load&lt;/h3&gt;
&lt;p&gt;Another type of validation is &lt;em&gt;poke&lt;/em&gt; validation, 
which checks if a job could be run under the current cluster &lt;em&gt;load&lt;/em&gt; 
i.e. with many of the cluster's resources already in use.&lt;br&gt;
See &lt;code&gt;man qsub&lt;/code&gt; and search for &lt;code&gt;-w&lt;/code&gt; 
for more information on the different types of validation.&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/sge-job-validation/</guid><pubDate>Mon, 20 Mar 2017 10:44:00 GMT</pubDate></item><item><title>Computational Mathematics with Jupyter workshop</title><link>http://rse.shef.ac.uk/blog/icms-2017/</link><dc:creator>Will Furnass</dc:creator><description>&lt;div&gt;&lt;p&gt;Back in mid-January three members of the University of Sheffield's Research Software Engineering Team
(me, &lt;a class="reference external" href="http://rse.shef.ac.uk/contact/"&gt;Mike Croucher&lt;/a&gt; and &lt;a class="reference external" href="http://rse.shef.ac.uk/blog/tania_allard"&gt;Tania Allard&lt;/a&gt;)
spent a week at a &lt;a class="reference external" href="http://opendreamkit.org/meetings/2017-01-16-ICMS/"&gt;Computational Mathematics with Jupyter workshop&lt;/a&gt;, hosted at Edinburgh's &lt;a class="reference external" href="http://www.icms.org.uk/"&gt;International Centre for Mathematical Sciences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This brought together the many members of the consortium working on the &lt;a class="reference external" href="http://opendreamkit.org/"&gt;OpenDreamKit&lt;/a&gt; Horizon 2020 European Research Infrastructure project.
The overall aim of the project is broad (to further the open-source computational mathematics ecosystem)
so it was unsurprising that the collective experience of the attendees was too.
The attendees generally fell into one of the following four camps:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Researchers interested in solving &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Group_theory"&gt;Group Theory&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Semigroup"&gt;Semigroup&lt;/a&gt; problems using the &lt;a class="reference external" href="https://www.gap-system.org/"&gt;GAP&lt;/a&gt; software,
some of which were involved with developing a &lt;a class="reference external" href="http://jupyter.readthedocs.io/en/latest/projects/kernels.html"&gt;Jupyter kernel&lt;/a&gt; for GAP;&lt;/li&gt;
&lt;li&gt;Others interested in the &lt;a class="reference external" href="http://www.sagemath.org/"&gt;SageMath&lt;/a&gt; computational mathematics ecosystem
(which is particularly strong for computational algebra) and
working on a Jupyter kernel for it;&lt;/li&gt;
&lt;li&gt;Research Software Engineers working on interactive widgets, visualisation tools and workflow tools for &lt;a class="reference external" href="http://jupyter.readthedocs.io/"&gt;Jupyter&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;People with experience/interest in using computational mathematics tools for teaching purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="The attendees of the workshop" src="http://rse.shef.ac.uk/images/icms-2017-attendees.jpg"&gt;
&lt;p class="caption"&gt;The attendees of the workshop.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The structure was different from conferences I'd attended previously:
for each of the five days we listened and debated presentations in the morning then
busied ourselves with &lt;a class="reference external" href="https://www.software.ac.uk/blog/2017-02-23-computational-mathematics-jupyter-sprint"&gt;code sprints&lt;/a&gt; in the afternoons.&lt;/p&gt;
&lt;div class="section" id="correctness-sustainability-and-human-fallibility"&gt;
&lt;h2&gt;Correctness, sustainability and human fallibility&lt;/h2&gt;
&lt;p&gt;Our own Mike Croucher kicked things off by asking
&lt;a class="reference external" href="http://mikecroucher.github.io/MLPM_talk/"&gt;Is your research software correct?&lt;/a&gt;
in which he presented &lt;strong&gt;Croucher's Law&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
I can be an idiot and &lt;strong&gt;will&lt;/strong&gt; make mistakes.&lt;/blockquote&gt;
&lt;p&gt;with the corollary that&lt;/p&gt;
&lt;blockquote&gt;
You are no different!&lt;/blockquote&gt;
&lt;p&gt;He argued, convincingly, that in our research we therefore need to put in place safeguards
to lessen the chance and impact of mistakes, and
proposed the following as partial solutions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Automate (aka learn to program)&lt;/li&gt;
&lt;li&gt;Write code in a (very) high-level language&lt;/li&gt;
&lt;li&gt;Get some training&lt;/li&gt;
&lt;li&gt;Use version control&lt;/li&gt;
&lt;li&gt;Get a code buddy (Maybe an &lt;a class="reference external" href="http://rse.shef.ac.uk/contact/"&gt;RSE&lt;/a&gt;!)&lt;/li&gt;
&lt;li&gt;Share your code and data openly&lt;/li&gt;
&lt;li&gt;Use literate computing technologies&lt;/li&gt;
&lt;li&gt;Write tests&lt;/li&gt;
&lt;li&gt;Cite code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.software.ac.uk/raniere-silva"&gt;Raniere Silva&lt;/a&gt; from the &lt;a class="reference external" href="https://www.software.ac.uk/"&gt;Software Sustainability Institute&lt;/a&gt; followed on with a complementary talk on how to make computational mathematics software more sustainable.  He commented that odd numerical bugs can easily creep in over time (e.g. differing floating point behaviour between Python 2 and 3) but that we can maintain confidence in software using version control, continuous integration, good documentation, tutorials, knowledge bases, instant messaging and by developing communities around the software we value.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://blogs.cs.st-andrews.ac.uk/alexk/"&gt;Alexander Konovalov&lt;/a&gt; then talked about a particular case of making research software more sustainable and portable: he's been using &lt;a class="reference external" href="http://www.docker.com/"&gt;Docker&lt;/a&gt; containers to run &lt;a class="reference external" href="https://www.gap-system.org/"&gt;GAP&lt;/a&gt;.  This lead into a discussion on whether Docker is a sensible solution for archiving/reproducing workflows: will it be around in ten years' time?  Those interested in that particular issue might benefit from attending the forthcoming &lt;a class="reference external" href="https://www.software.ac.uk/"&gt;Software Sustainability Institute&lt;/a&gt; workshop on &lt;a class="reference external" href="https://www.software.ac.uk/c4rr"&gt;Docker Containers for Reproducible Research&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="jupyter-what-is-it-and-how-can-we-diff-merge-test-notebooks"&gt;
&lt;h2&gt;Jupyter: what is it and how can we diff/merge/test Notebooks?&lt;/h2&gt;
&lt;p&gt;We were then given what was pitched as a &lt;strong&gt;'general introduction' to Jupyter&lt;/strong&gt;
but ended up covering much more ground than anticipated,
largely due to the speaker being &lt;a class="reference external" href="https://twitter.com/takluyver"&gt;Thomas Kluyver&lt;/a&gt;, one of the core IPython developers
(who happens to have gained his PhD from the University of Sheffield).
Thomas talked about the most significant features
(literate programming environments;
the power and versatility of using the browser as a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;REPL&lt;/a&gt;;
Jupyter's client-server architecture)
but also touched upon
&lt;strong&gt;various tools and platforms that have built on Jupyter&lt;/strong&gt; including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://jupyterhub.readthedocs.io/en/latest/"&gt;JupyterHub&lt;/a&gt;: a multi-user hub which "spawns, manages, and proxies multiple instances of the single-user Jupyter Notebook server".  One of the University of Sheffield's deliverables for the OpenDreamKit project is to get this running on our own computer clusters so users dictate what resources (e.g. cores, memory, GPUs) they want when they start a single-user Notebook session;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jupyter/tmpnb"&gt;tmpnb&lt;/a&gt;: a JupyterHub-like system for launching temporary single-user Notebook sessions in the cloud (which are each backed by a Docker container).  tmpnb powers &lt;a class="reference external" href="https://try.jupyter.org/"&gt;https://try.jupyter.org/&lt;/a&gt; (hosted by RackSpace), which allows people to briefly test out Jupyter without installing anything locally;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mybinder.org/"&gt;binder&lt;/a&gt;: a tool for turning a GitHub repository into a collection of interactive Notebooks, configuring the required environment/dependencies using a Dockerfile, Python requirements.txt file or Conda environment file;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://nbgrader.readthedocs.io/en/stable/"&gt;nbgrader&lt;/a&gt;: a tool for distributing coding and/or free text Notebook-based assignments then automatically or manually grading them.  This can integrate with JupyterHub;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://nbconvert.readthedocs.io/en/latest/"&gt;nbconvert&lt;/a&gt;: convert a Notebook to HTML/Markdown/PDF/scripts or a custom format (using a &lt;a class="reference external" href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt; template).  It is used by &lt;a class="reference external" href="http://rse.shef.ac.uk/blog/icms-2017/nbviewer.jupyter.org"&gt;nbviewer.jupyter.org&lt;/a&gt; to create online static HTML views of Notebooks.  nbconvert is also used by GitHub for rendering Notebooks;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/takluyver/nbparameterise"&gt;nbparameterise&lt;/a&gt;:  Often you want design Notebooks to demonstrate/explore the impact of a small number of key variables.  This project of Thomas's allows such variables to be set in the first code cell then the entire Notebook can be run non-interactively and rendered to HTML;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jupyterlab/jupyterlab"&gt;jupyterlab&lt;/a&gt;: This will be the next iteration of Jupyter's UI: rather than exclusively displaying a terminal, Notebook or file editor in the Jupyter interface, instead a multi-tab and multi-pane interface allows you to view and interact with several of these things at once.  It will therefore look and feel a bit more like Spyder/R Studio/MATLAB but this is no bad thing as all of those make good use of screen real estate provided by the wide monitors we all have these days.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="JupyterLab: the future of the Jupyter interface" src="http://rse.shef.ac.uk/images/jupyterlab.png"&gt;
&lt;p class="caption"&gt;JupyterLab: the future of the Jupyter interface.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Given the enormity of the Jupyter ecosystem and how quickly it has grown
it was great to hear from a core developer which related projects he thinks are the most significant and interesting!&lt;/p&gt;
&lt;p&gt;Next up, Vidar Fauske gave &lt;a class="reference external" href="http://opendreamkit.org/meetings/2017-01-16-ICMS/talks/nbdime.pdf"&gt;this talk&lt;/a&gt; on &lt;a class="reference external" href="https://nbdime.readthedocs.io/en/latest/"&gt;nbdime&lt;/a&gt;, a new tool for &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Merge_(version_control)"&gt;merging&lt;/a&gt; and &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Diff_utility"&gt;diffing&lt;/a&gt; Jupyter Notebooks.
The backstory is that for some time we've been recommending Jupyter to those wanting to start using Python or R in their research and we've also been telling everyone to use version control but the diffing and merging tools typically used with version control systems don't work well with Notebooks as they&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Operate on lines without consideration of whether a file has a nested structure (JSON in the case of Notebooks);&lt;/li&gt;
&lt;li&gt;Base64-encoded binary objects in Notebooks are naively treated in just the same way as text;&lt;/li&gt;
&lt;li&gt;No logic for omitting certain entities (execution counters; cell outputs) from version control (although the wonderful &lt;a class="reference external" href="https://github.com/kynan/nbstripout"&gt;nbstripout&lt;/a&gt; can handle both of these cases when triggered by a &lt;a class="reference external" href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;git hook&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ultimately visualising the differences between two Notebooks and merging Notebooks in sensible, useful ways really requires that the tools that perform these functions have some understanding of the structure and purpose of Notebooks: &lt;strong&gt;nbdime&lt;/strong&gt; has that awareness:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The major unit for merging/diffing is the &lt;strong&gt;cell&lt;/strong&gt;, the line.&lt;/li&gt;
&lt;li&gt;Input cell merging is string merging whereas&lt;/li&gt;
&lt;li&gt;Cell outputs are treated as atomic: they match or they don't.&lt;/li&gt;
&lt;li&gt;Execution counts are sensibly ignored by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;nbdime provides a core library, plus command-line and browser interfaces for diffing and merging.&lt;/p&gt;
&lt;p&gt;Overall, I'm massively excited about nbdime for facilitating much slicker Notebook-based version controlled workflows and hope it sees widespread adoption and promotion by the likes of &lt;a class="reference external" href="https://software-carpentry.org/lessons/"&gt;Software Carpentry&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="nbdime's nbdiff tool for viewing the differences between two Notebooks" src="http://rse.shef.ac.uk/images/nbdiff-example.png"&gt;
&lt;p class="caption"&gt;nbdime's nbdiff tool for viewing the differences between two Notebooks.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Hans Fangohr then introduced &lt;a class="reference external" href="https://github.com/computationalmodelling/nbval"&gt;nbval&lt;/a&gt;, a new tool for &lt;strong&gt;automating the valdation of Jupyter Notebooks&lt;/strong&gt;.  This could give researchers greater confidence in their workflows: &lt;strong&gt;does a demonstrative Notebook still give the same answers if re-run after making changes to the Notebook's environment (e.g. the package dependencies)?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;nbval, a &lt;a class="reference external" href="http://doc.pytest.org/en/latest/"&gt;pytest&lt;/a&gt; plug-in, works as follows: it creates a copy of a Notebook file, executes the copy in the current Python environment, saves the copy Notebook with its new cell outputs then compares the outputs of the two Notebooks.  There are some nice features to control the granularity of testing: flags can be set so certain cells are run but not tested; &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regexes&lt;/a&gt; can be used to ignore oft-changing output strings (e.g. paths, timestamps, memory addresses).  Images and LaTeX can't be handled yet.&lt;/p&gt;
&lt;p&gt;Again, I'm exited about this new tool: being able to package both workflow documentation and regression/ acceptance tests as Notebooks is a great idea.  Note that at present both nbdime and nbval include mechanisms for comparing Notebooks but are presently separate projects.  It will be interesting to see if there's any convergence in future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="interactive-widgets-in-notebooks"&gt;
&lt;h2&gt;Interactive widgets in Notebooks&lt;/h2&gt;
&lt;p&gt;We were treated to two talks on the &lt;a class="reference external" href="https://ipywidgets.readthedocs.io/en/latest/"&gt;ipywidgets&lt;/a&gt; package, which provides &lt;strong&gt;Python and Javascript-backed widgets for interacting with Notebooks&lt;/strong&gt; e.g. sliders for assessing the impact of model parameters on trends in embedded &lt;a class="reference external" href="http://matplotlib.org/"&gt;matplotlib&lt;/a&gt; plots.&lt;/p&gt;
&lt;p&gt;First, &lt;a class="reference external" href="https://github.com/jdemeyer"&gt;Jeroen Demeyer&lt;/a&gt; introduced us to the high-level &lt;tt class="docutils literal"&gt;interact&lt;/tt&gt; Python decorator function and &lt;tt class="docutils literal"&gt;interactive&lt;/tt&gt; class one can use to control function inputs using a HTML+Javascript widget.  He then went on to explain how one can manually reproduce the magic of these mechanisms: you instantiate some (typed) input widgets and output widgets, add them to an on-screen container then associate each input widget with a callback.&lt;/p&gt;
&lt;p&gt;Next, &lt;a class="reference external" href="http://www.proba.jussieu.fr/pageperso/corlay/"&gt;Sylvain Corlay&lt;/a&gt; talked about the ipywidgets ecosystem and the future direction of the project.  He mentioned several projects that have built on ipywidgets, all of which sound exciting but none of which I'd heard of before this!&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/bloomberg/bqplot"&gt;bqplot&lt;/a&gt;: a &lt;a class="reference external" href="http://matplotlib.org/"&gt;matplotlib&lt;/a&gt; alternative that supports the same API, uses custom ipywidgets and behind the scenes uses &lt;a class="reference external" href="https://d3js.org/"&gt;d3.js&lt;/a&gt; for low-level drawing;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jovyan/pythreejs"&gt;pythreejs&lt;/a&gt;: this exposes the API of the &lt;cite&gt;three.js&lt;/cite&gt; Javascript/WebGL 3D library to Python; this is a low-level API, not a Python plotting library.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ellisonbg/ipyleaflet"&gt;ipyleaflet&lt;/a&gt;: a GIS plotting library that uses ipywidgets and the &lt;a class="reference external" href="http://leafletjs.com/"&gt;Leaflet&lt;/a&gt; Javascript library.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jupyter-widgets/widget-cookiecutter"&gt;widget-cookiecutter&lt;/a&gt;: a template for creating custom ipywidgets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The current version of ipywidgets, released since the workshop, includes some interesting developments: much more of the code is now written in Javascript (actually Typescript) rather than Python so widgets state is maintained in JavaScript-land: widgets can therefore now be rendered and manipulated without a Jupyter kernel!  See &lt;a class="reference external" href="http://nbviewer.jupyter.org/github/ipython/ipywidgets/blob/master/docs/source/examples/Widget%20List.ipynb"&gt;this statically-rendered Notebook&lt;/a&gt; on GitHub as an example.  Another advantage of migrating the bulk of the code to Javascript is that the widgets should be usable with kernel languages other than Python such as R (once people have written language-specific ipywidgets backends).&lt;/p&gt;
&lt;p&gt;Separate to ipywidgets, we were also introduced to &lt;a class="reference external" href="https://www.logilab.org/blogentry/8541176"&gt;SciviJS&lt;/a&gt;, a tool currently being developed by &lt;a class="reference external" href="https://twitter.com/Renou_Martin"&gt;Martin Renou&lt;/a&gt; at &lt;a class="reference external" href="https://www.logilab.org/"&gt;LogiLab&lt;/a&gt; for &lt;strong&gt;visualising 3D mesh-based geometries in a Juypter Notebook&lt;/strong&gt;.  It uses also uses &lt;a class="reference external" href="https://www.khronos.org/webgl/"&gt;WebGL&lt;/a&gt; / &lt;a class="reference external" href="https://threejs.org/"&gt;three.js&lt;/a&gt; for rendering so is rather performant.  I can see some ex-colleagues in civil engineering really liking this.  Check out the &lt;a class="reference external" href="https://demo.logilab.fr/SciviJS/"&gt;online demo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="numbas-for-online-computer-aided-assessment-cas"&gt;
&lt;h2&gt;Numbas for online computer-aided assessment (CAS)&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.numbas.org.uk/"&gt;Numbas&lt;/a&gt; is a open web-based system for formative and summative maths and science tests.  It is being developed by &lt;a class="reference external" href="http://somethingorotherwhatever.com/"&gt;Christian Lawson-Perfect&lt;/a&gt; from the University of Newcastle's &lt;a class="reference external" href="http://www.ncl.ac.uk/maths/outreach/elearning/#overview"&gt;Maths and Stats E-Learning unit&lt;/a&gt;.  It's very different to teaching environments that use Jupyter (e.g. &lt;a class="reference external" href="https://cloud.sagemath.com/"&gt;SageMathCloud&lt;/a&gt;) as almost all the code is self-contained HTML+Javascript that is run on the client (for scalability and resilience) and it is for generating closed tests (rather than open mathematical exercises).  Looks very attractive and intuitive from the user's perspective!&lt;/p&gt;
&lt;p&gt;Christian also mentioned &lt;a class="reference external" href="http://up-for-grabs.net/"&gt;Up For Grabs&lt;/a&gt;, a site of projects wanting help on simpler tasks.  He says it's a good and simple way of getting less experienced developers involved with open-source projects.  As a project maintainer you upload some blurb about your project and tell the site which GitHub Issue tag(s) indicate smaller tasks that are 'up for grabs'.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="case-studies-of-jupyter-usage"&gt;
&lt;h2&gt;Case studies of Jupyter usage&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.southampton.ac.uk/~fangohr/"&gt;Hans Fangohr&lt;/a&gt; from the &lt;a class="reference external" href="http://cmg.soton.ac.uk/"&gt;University of Southampton&lt;/a&gt; reported on using Python and Jupyter to encapsulate multi-stage micro-magnetism modelling workflows:
his team have been able to automate the generation of input files and processing of output files for/from old but robust modelling software (&lt;a class="reference external" href="http://math.nist.gov/oommf/"&gt;OOMMF&lt;/a&gt;);
Jupyter then further masks away the complexities of running models.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.sheffield.ac.uk/physics/contacts/mark-quinn"&gt;Mark Quinn&lt;/a&gt; then talked about the impact that &lt;a class="reference external" href="https://cloud.sagemath.com/"&gt;SageMathCloud&lt;/a&gt;, an online teaching environment which uses Jupyter, has had on the teaching of physics, astronomy and coding at the University of Sheffield.  He's been working with Mike Croucher to develop SageMathCloud courses for the Physics department with the goal of introducing effective programming tuition early in undergraduate Physics degree programmes.  He's now quite a fan of the used coding environment (Jupyter) and SageMathCloud's courseware tools (chat facilities and mechanisms for setting and grading assignments) but has now been using it long enough to identify some challenges/issues too (e.g. students getting confused about the order of execution of cells; students opening many notebooks at once (each of which has a resource footprint).&lt;/p&gt;
&lt;p&gt;Mark is involved with the Shepherd Group, who research the efficacy of teaching methods and are based in the same Physics department.  They've recently been studying the impact of using the Jupyter Notebook to undergraduate students who had and hadn't studied Physics at A-Level.  They tested students (at different levels of &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Bloom%27s_taxonomy"&gt;Bloom's Taxonomy&lt;/a&gt;) before and after teaching and concluded that the Notebooks were suitable for aiding students, regardless of whether they had a Physics background.  Hopefully the &lt;a class="reference external" href="https://www.software.ac.uk/"&gt;Software Sustainability Institute&lt;/a&gt; can lend their support to pedagogical studies of this nature in future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="other-talks"&gt;
&lt;h2&gt;Other talks&lt;/h2&gt;
&lt;p&gt;I should note that there were also a number of other talks that focussed on the &lt;a class="reference external" href="https://www.gap-system.org/"&gt;GAP&lt;/a&gt; and &lt;a class="reference external" href="http://www.sagemath.org/"&gt;SageMath&lt;/a&gt; computational mathematics software packages:
I've deliberately not mentioned them here
so as not to expose my lack of understanding of group theory and semi-groups
and also this post is long enough already!
See the &lt;a class="reference external" href="http://opendreamkit.org/meetings/2017-01-16-ICMS/programme/"&gt;full programme&lt;/a&gt; for info on things I've neglected plus links to the presentations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="coding-sprints-inc-jupyter-interactions-gallery"&gt;
&lt;h2&gt;Coding Sprints (inc. Jupyter Interactions gallery)&lt;/h2&gt;
&lt;p&gt;After lunch on each of the five days of the workshop we worked on various coding sprints:
some wrote a Jupyter kernel for GAP,
others worked on SageMath,
whilst me and a few others started work on &lt;a class="reference external" href="https://github.com/mikecroucher/jupyter-interactions"&gt;Jupyter Interactions&lt;/a&gt;.
This sprint was suggested by Mike Croucher:
he thought it would be nice to have a curated set of Notebooks that
demonstrate how to use different &lt;a class="reference external" href="https://ipywidgets.readthedocs.io/en/latest/"&gt;ipywidgets&lt;/a&gt; to manipulate various mathematical objects.
Several of us wrote Notebooks while
&lt;a class="reference external" href="http://somethingorotherwhatever.com/"&gt;Christian Lawson-Perfect&lt;/a&gt; quickly put together a very nice &lt;a class="reference external" href="https://github.com/christianp/jupyter-interactions-site"&gt;gallery-generating front end&lt;/a&gt;:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Jupyter Interactions Notebook gallery" src="http://rse.shef.ac.uk/images/jupyter-interactions.png"&gt;
&lt;p class="caption"&gt;Jupyter Interactions Notebook gallery.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See the &lt;a class="reference external" href="https://mikecroucher.github.io/jupyter-interactions/"&gt;end result here&lt;/a&gt;.
Should you wish to submit your own Jupyter Interactions Notebook then
please &lt;a class="reference external" href="https://github.com/mikecroucher/jupyter-interactions/pulls"&gt;submit a pull request&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="culture"&gt;
&lt;h2&gt;Culture&lt;/h2&gt;
&lt;p&gt;This was the first time I'd been to a conference where the emphasis was very much on sharing ideas and working together:
the academic conferences I'd attended prior to this had previously had an air of competition about them.
Looking forward to meeting up with the OpenDreamKit gang again!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>conference</category><guid>http://rse.shef.ac.uk/blog/icms-2017/</guid><pubDate>Sun, 12 Mar 2017 22:00:00 GMT</pubDate></item><item><title>A new member of the team: Tania Allard</title><link>http://rse.shef.ac.uk/blog/tania_allard/</link><dc:creator>Tania Allard</dc:creator><description>&lt;div&gt;&lt;h3&gt;About my research&lt;/h3&gt;
&lt;p&gt;I recently completed a PhD in &lt;a href="http://www.materials.manchester.ac.uk/"&gt;Materials Science at the University of Manchester&lt;/a&gt; which focused on computational nanomechanics. The primary goal was to develop a robust characterisation technique for very small volumes of biocompatible materials and biological tissues.&lt;/p&gt;
&lt;p&gt;Since such materials exhibit highly complex mechanical responses, the extraction of the values of constitutive parameters from test outputs is not straightforward and often requires inverse analysis. For such purposes I used an iterative &lt;a href="https://en.wikipedia.org/wiki/Finite_element_method"&gt;Finite Element Analysis&lt;/a&gt; approach to extract meaningful constitutive parameters from the experimental data.&lt;/p&gt;
&lt;p&gt;The Finite Element simulations were performed using &lt;a href="https://www.3ds.com/products-services/simulia/products/abaqus/"&gt;ABAQUS&lt;/a&gt; while the optimisation based iterative approach was enforced by a series of codes in MATLAB (MATLAB was chosen as it provides a compatible interface to FE codes via multiple programming languages) and Python. The material constitutive laws were prescribed using either user-developed Fortran subroutines or Abaqus-built-in material models. For the case of hydrated materials an additional Fortran subroutine for surface flow conditions was used.&lt;/p&gt;
&lt;p&gt;The workflow was as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python scripts were used to generate the Abaqus input files with user provided variables (e.g. geometrical and boundary conditions identical to the experimental set up)&lt;/li&gt;
&lt;li&gt;The mean experimental response was fit to an analytical expression for time-dependent creep using MATLAB's &lt;a href="https://uk.mathworks.com/help/optim/ug/lsqnonlin.html?requestedDomain=uk.mathworks.com"&gt;lsqnonlin&lt;/a&gt; algorithm. The parameters obtained from the initial fit were then used as the initial  guesses for the optimisation algorithm, after which the Fortran (UMAT) subroutine and/or the input files were updated.&lt;/li&gt;
&lt;li&gt;The FEA was performed  and upon completion the relevant data was extracted using a Python script.&lt;/li&gt;
&lt;li&gt;The MATLAB code was then used to fit the data obtained from FEA to the experimental observations, the parameters of the constitutive model were adjusted by means of the lsqnonlin algorithm. The quality of  the parameter set was evaluated by the minimization of the root mean square error between the experimental and numerical data.&lt;/li&gt;
&lt;li&gt;The parameters are further iteratively refined until the objective function satisfied a given convergence criterion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the constitutive material parameters were obtained different parametric studies were performed using the HPC facilites at the University of Manchester (e.g. to study the effect of sample thickness, water content, and support material on the mechanical response).&lt;/p&gt;
&lt;h3&gt;Research Software Engineering&lt;/h3&gt;
&lt;p&gt;I believe there are various reasons which led me to pursue a career as a RSE. While doing my PhD I realized how important research software is, especially when are dealing with highly complex physical systems and when the use of experimental techniques is not enough/too complex/to expensive/unsuitable for what you are studying. Also, I became very frustrated by the lack of Open Source software in my area, especially when we contacted researchers in other institutes, which demanded us signing a waiver to have access to their software. Whenever I found or were passed codes, scripts, or subroutines which would "help" with my research I spent an incredible amount of time going through badly commented (if commented at all!), badly documented scripts with no version control whatsoever. I then imagined it could not only be me getting this frustrated and wasting valuable time trying to make sense of poor code so I started using version control (and forcing people in my lab to do it) and producing code that could be passed to others (more than likely people in my lab).&lt;/p&gt;
&lt;p&gt;Eventually I realized this was a bit of what RSE's do, and it turned out I enjoyed a bit more the software development side of research than the experimental bits, so pursuing a RSE career was pretty much a natural thing to do (and I suppose I wanted to prevent people from getting frustrated when accessing others' scripts). Also, I started realizing the RSE community in the UK is relatively small (albeit constantly growing) so when I saw the advertisement for the position at Sheffield I asked a couple of people at the University of Manchester if they knew the team, I received good comments (mainly on how enthusiastic &lt;a href="http://www.walkingrandomly.com/"&gt;Mike Croucher&lt;/a&gt; is). I did my own research about the University, the RSE team, the projects in different groups, and it seemed both the University and the RSE would provide not only interesting projects to work on but also valuable insight (and mentoring) from experienced RSE's. Also, after realizing that the team was also quite small I figured it would allow for plenty of opportunities to learn loads of new skills while using my current  expertise.&lt;/p&gt;
&lt;p&gt;Last year I volunteered at the &lt;a href="https://www.software.ac.uk/news/2016-05-09-first-ever-conference-research-software-engineers-call-participation"&gt;national RSE conference&lt;/a&gt;, I thought this would be an excellent opportunity to get to know the community, talk to RSE's from different places/universities about the projects they do and why they pursued a career like this. It definitely opened my eyes to the diversity of projects they work in and how collaborative this environment actually is, and if anything it just made me feel more excited and confident about my career post-PhD.&lt;/p&gt;
&lt;p&gt;So when I had the chance to be in the committee for the RSE2017 conference I decided to get involved. Last year was a great experience for me and I think I might have one or two ideas to make this year's event better (even if only a little).&lt;/p&gt;
&lt;p&gt;So far, my experience as a member of the RSE community has been quite pleasant. We always hear about the computer science and STEM communities being not so diverse, but I can see many groups working hard to be more inclusive and working hard to support junior RSE's, like me. The community is filled with very enthusiastic people, often working in very very interesting stuff. The Sheffield RSE team has been very welcoming and supportive over the few months I have been there, so I can truly say that I am very happy to be part of this team.&lt;/p&gt;
&lt;p&gt;I am not 100% sure what my future career looks like, but I would certainly like to help raise awareness of how important software actually is for research, and how important it is for that software to be developed under good practices and with sufficient resources. Many people are aware now how important open data sources are, and I hope people would see research code in a similar way, that it needs to be open and made available for whoever needs it, or just to demonstrate how reproducible their studies are. So I believe I will be making my part by setting/maintaining software standards within the RSE team and spreading the word. Also, I am massively interested in the so-called big-data/data science areas so I would definitely like to get involved in more projects concerning those areas.&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/tania_allard/</guid><pubDate>Thu, 09 Feb 2017 21:37:12 GMT</pubDate></item><item><title>Will Furnass joins to work on Jupyter and Grid Engine integration</title><link>http://rse.shef.ac.uk/blog/willfurnass_intro/</link><dc:creator>Will Furnass</dc:creator><description>&lt;div&gt;&lt;img alt="Will Furnass" class="align-right" src="http://rse.shef.ac.uk/images/willfurnass.png"&gt;
&lt;p&gt;The Research Software Engineering team at the University of Sheffield has gained a new member!
I joined at the start of January and
will primarily be working on &lt;a class="reference external" href="http://opendreamkit.org/"&gt;OpenDreamKit&lt;/a&gt;
which is a &lt;a class="reference external" href="https://ec.europa.eu/programmes/horizon2020/"&gt;Horizon 2020&lt;/a&gt;
European &lt;a class="reference external" href="https://ec.europa.eu/programmes/horizon2020/en/h2020-section/european-research-infrastructures-including-e-infrastructures"&gt;Research Infrastructure&lt;/a&gt; project
with the aim of furthering the open-source computational mathematics ecosystem.&lt;/p&gt;
&lt;p&gt;My contribution to this project is to extend work previously started at the University of Sheffield
to allow researchers to more easily run interactive workflows on &lt;a class="reference external" href="https://en.wikipedia.org/wiki/High-performance_computing"&gt;High-Performance Computing&lt;/a&gt; clusters,
specifically to make it easy, robust and intuitive to run &lt;a class="reference external" href="http://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/what_is_jupyter.html"&gt;Jupyter Notebooks&lt;/a&gt; on
clusters running job scheduling software from the &lt;a class="reference external" href="https://arc.liv.ac.uk/trac/SGE"&gt;Grid Engine&lt;/a&gt; family.&lt;/p&gt;
&lt;p&gt;Jupyter Notebooks are &lt;strong&gt;runnable documents&lt;/strong&gt; containing code snippets
that are viewed and manipulated from a web browser.
They are an increasingly popular way of encapsulating, presenting and sharing a coding-oriented workflow.
A Notebook comprises a column of cells, where each cell can contain:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;some code or&lt;/li&gt;
&lt;li&gt;explanatory text (that can be formatted using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;) and/or mathematical expressions (formatted using &lt;a class="reference external" href="https://www.mathjax.org/"&gt;MathJax&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a code cell is executed by the user it can return anything renderable by a modern web browser:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a single value,&lt;/li&gt;
&lt;li&gt;a table of data,&lt;/li&gt;
&lt;li&gt;a figure or&lt;/li&gt;
&lt;li&gt;a mathematical expression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;img alt="/images/jupyter_notebook_example.png" src="http://rse.shef.ac.uk/images/jupyter_notebook_example.png"&gt;
&lt;p&gt;The code cells of a Notebook can be (re)run in any order, so Notebooks are very useful for interactive exploration.&lt;/p&gt;
&lt;p&gt;The structure of Jupyter is typically as follows:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Notebook in browser] &amp;lt;---&amp;gt; [Jupyter server] &amp;lt;---&amp;gt; [Kernel]
&lt;/pre&gt;
&lt;p&gt;where the kernel is the part that executes code cells.  There are &lt;a class="reference external" href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels"&gt;kernels for many different programming languages&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The server and kernel can run on the same machine as the web browser
but the architecture allows them to also run on remote machines.
These remote systems could be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a research group's central server,&lt;/li&gt;
&lt;li&gt;a Jupyter-aware cloud service (e.g. &lt;a class="reference external" href="https://cloud.sagemath.com/settings"&gt;SageMathCloud&lt;/a&gt; or &lt;a class="reference external" href="https://notebooks.azure.com/"&gt;Azure Notebooks&lt;/a&gt;) or ...&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;the HPC clusters operated by so many academic institutions&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is where my part of OpenDreamKit comes in.
Computer clusters such as &lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/en/latest/iceberg/index.html"&gt;Iceberg&lt;/a&gt; and &lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/en/latest/sharc/index.html"&gt;ShARC&lt;/a&gt; here at the University of Sheffield allow users to
run computational jobs with more resources than typically available in researchers' own machines.
Jobs can have parallel threads of execution running on up to sixteen cores per node
and/or running over multiple nodes,
jobs can use hundreds of MB of RAM and
can make use of the latest generation of GPUs for things like
accelerated &lt;a class="reference external" href="http://www.acrc.com/deep-learning/"&gt;deep learning workflows&lt;/a&gt;.
However, the need to request resources, then submit and monitor jobs from the command-line can be a steep barrier to entry for some.
Being able to easily run Jupyter Notebooks on our clusters and
request the necessary resources for our interactive explorations via an intuitive web interface
could help make HPC more accessible and useful to those without a strong understanding of Linux and the command-line.&lt;/p&gt;
&lt;p&gt;We already have &lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/en/latest/iceberg/accessing/jupyterhub.html"&gt;an instance of JupyterHub running&lt;/a&gt; to allow users to start Jupyter sessions on our &lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/en/latest/iceberg/index.html"&gt;Iceberg&lt;/a&gt; cluster
thanks to the efforts of &lt;a class="reference external" href="http://stuartmumford.uk/"&gt;Stuart Mumford&lt;/a&gt;.
I will be working on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Upgrading this to use the latest version of JupyterHub;&lt;/li&gt;
&lt;li&gt;Setting up JupyterHub on our new cluster (&lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/en/latest/sharc/index.html"&gt;ShARC&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Developing a mechanism for easily requesting resources (more RAM / CPU cores / GPUs) from the Grid Engine scheduler;&lt;/li&gt;
&lt;li&gt;Making the JupyterHub and Grid Engine integration more robust.&lt;/li&gt;
&lt;li&gt;Looking at how JupyterHub could be set up on HPC clusters at other institutions (possibly using different schedulers) for research/teaching.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm rather excited about this new role.  One nice aspect to it is that I am now according to my contract officially a &lt;a class="reference external" href="http://www.rse.ac.uk/"&gt;Research Software Engineer&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Dr Furnass&lt;/p&gt;
&lt;p&gt;Further to recent discussions, I am pleased to confirm the change in your appointment with the University of Sheffield.
The details of your offer are provided below:&lt;/p&gt;
&lt;p&gt;Appointment Details:
You, Dr William Furnass, shall be employed by the University of Sheffield as a Research Software Engineer
in the Department of Computer Science with effect from 1 January 2017.
This position is offered on a fixed term basis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This demonstrates that research institutions have started recognising &lt;a class="reference external" href="http://www.rse.ac.uk/who.html"&gt;Research Software Engineering&lt;/a&gt; as an alternative career path in academia
(something the &lt;a class="reference external" href="https://www.software.ac.uk/"&gt;Software Sustainability Institute&lt;/a&gt; have been pushing for for some time) and
RSEs aren't simply post-doctoral researchers who happen to write software.&lt;/p&gt;
&lt;p&gt;The path to this point has not been particularly direct:
I have a &lt;a class="reference external" href="https://engineering.leeds.ac.uk/computing"&gt;computer scence degree&lt;/a&gt;,
worked as a IT systems engineer in the film industry,
have a PhD plus post-doc experience in &lt;a class="reference external" href="http://www.shef.ac.uk/civil/"&gt;water engineering&lt;/a&gt;
(where I developed semi-physical and data-driven models of water quality in water distribution networks) and
I have provided support to the users of the University of Sheffield's &lt;a class="reference external" href="http://docs.hpc.shef.ac.uk/"&gt;HPC clusters&lt;/a&gt;.
In addition I taught or helped run RSE, water engineering and study skills workshops.&lt;/p&gt;
&lt;p&gt;My interests include
helping researchers optimise data analysis workflows (primarily using higher-level languages),
providing training in RSE best practices and
systems administration.
You can contact me via:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Email: w.furnass (at) sheffield.ac.uk&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a class="reference external" href="https://twitter.com/willfurnass"&gt;@willfurnass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/willfurnass_intro/</guid><pubDate>Mon, 30 Jan 2017 10:56:00 GMT</pubDate></item><item><title>£1 million grant to shed light on how we learn languages</title><link>http://rse.shef.ac.uk/blog/linuistics_grant_2016/</link><dc:creator>Mike Croucher</dc:creator><description>&lt;div&gt;&lt;p&gt;A £1 million grant to help researchers understand what speakers know about languages, in order to help make learning foreign languages easier, has been awarded to the University of Sheffield's Faculty of Arts and Humanities.  &lt;/p&gt;
&lt;p&gt;Over five years, the Research Leadership Award from the Leverhulme Trust will allow experts to develop new, accurate ways of describing speakers’ linguistic knowledge, by using machine-learning techniques that mimic the way in which humans learn.&lt;/p&gt;
&lt;p&gt;The patterns they find will be verified in laboratory settings and then tested on adult foreign language learners to see if such patterns can help them learn a foreign language in a way that resembles how they learned their mother tongue.&lt;/p&gt;
&lt;p&gt;The aim is to lead a step-change in research on language and language learning by capturing the linguistic knowledge adult speakers build up when they are exposed to a language in natural settings. These insights will help with the development of strategic language teaching materials to transform the way in which we teach foreign languages.&lt;/p&gt;
&lt;p&gt;The team will be led by Dr Dagmar Divjak from the University’s School of Languages and Cultures, in close collaboration with Dr Petar Milin, Department of Journalism Studies, and with Research Software Engineering support from Dr Mike Croucher, Department of Computer Science.&lt;/p&gt;
&lt;p&gt;Sheffield's Research Software Engineering Group are collaborators on the project and will provide support in High Performance Computing, software engineering and data management. This will help ensure that all developed software is efficient, correct, citable, easy to use and openly available. The aim is to maximise research impact and reproducibility through the application of modern software engineering methodologies.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The out of our minds team" src="http://rse.shef.ac.uk/images/DSC03577.jpg"&gt;&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/linuistics_grant_2016/</guid><pubDate>Tue, 03 Jan 2017 15:22:11 GMT</pubDate></item><item><title>Bashing down Windows for Materials Science</title><link>http://rse.shef.ac.uk/blog/windows_bash_materials/</link><dc:creator>Christopher Handley</dc:creator><description>&lt;div&gt;&lt;p&gt;In the last few months Windows 10 has had an interesting new capability – &lt;a href="http://www.walkingrandomly.com/?p=6187"&gt;Bash&lt;/a&gt;. Originally the Linux Subsystem was only available for those on the developer loop, but since the Windows 10 Anniversary edition this subsystem has been available to all users who activate it. The subsystem is not an emulator, but a way for Windows 10 to run Linux applications, and to use the Linux Bash environment, through the use of dynamic maps between Linux system calls and Windows ones.&lt;/p&gt;
&lt;p&gt;As a computational chemist working in the &lt;a href="http://www.sheffield.ac.uk/materials"&gt;Department of Materials Science and Engineering&lt;/a&gt; this is really an excellent and exciting new way that Windows has evolved.
There are a great many tools for my research. Some work on Windows, and are well designed for that OS, given that they are applications aimed at the people that make and analyse their materials. These tools help users visualize crystal structures in 3D, or predict from crystal structures experimental observables, such as transition electron microscopy. For computational chemists, these tools are often also invaluable as they allow us to construct visually the crystal structures that we wish to then simulate using quantum mechanics or classical force fields.
More often than not, the programs designed for running such chemical simulations, have no GUI, and run in a Unix environment. &lt;a href="http://www.castep.org/"&gt;CASTEP&lt;/a&gt; is a UK created Density Functional Theory simulation package, which is free for all UK academics, and is used extensively by those researchers wishing to simulated solid state materials, such as batteries, piezoelectric materials, and solar power materials. Previously, to run CASTEP on a Windows machine, &lt;a href="https://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; or a &lt;a href="https://en.wikipedia.org/wiki/Virtual_machine"&gt;virtual machine&lt;/a&gt; were required. However, with the new subsystem, CASTEP installs out of the box as if you were running any other Linux computer.
The same is equally true of &lt;a href="https://nanochemistry.curtin.edu.au/gulp/"&gt;GULP&lt;/a&gt;, another program used in materials science, which is often used to design, test, and analyse atomistic potentials. &lt;a href="http://www.scd.stfc.ac.uk/SCD/44516.aspx"&gt;DL_POLY&lt;/a&gt;, another UK created simulation package is also used by a large user base to perform molecular dynamics simulations using atomistic potentials.&lt;/p&gt;
&lt;p&gt;All of the above programs mentioned, and many more, such as the DFT codes &lt;a href="https://www.vasp.at/"&gt;VASP&lt;/a&gt; and &lt;a href="http://www.wien2k.at/"&gt;WIEN2K&lt;/a&gt;, and other molecular dynamics programs such as &lt;a href="http://www.gromacs.org/"&gt;GROMACS&lt;/a&gt;, and &lt;a href="http://lammps.sandia.gov/"&gt;LAMMPS&lt;/a&gt;, can have their output analysed by these Windows 10 packages, and their inputs easily designed by these same crystal analysis programs, but natively are best run in a Unix environment.&lt;/p&gt;
&lt;p&gt;The typical work around has always been either the use a virtual machine, Cygwin, or, using more expensive Apple computers, or making users use Linux machines for which they may not be comfortable using – especially if their previous workflow used packages that ran on Windows.&lt;/p&gt;
&lt;p&gt;Personally I fall into that last category of users. While I can write a paper in &lt;a href="https://www.latex-project.org/"&gt;LaTeX&lt;/a&gt;, I really don’t like it compared to the WYSIWYG world of Word, and of course with word I can use my favourite citation manager, Zotero (which by the way the work around using Dropbox is also good fun). That impact on workflow is an important thing, especially if you are dealing with final year students who you want to work on your research. Ideally you want to get them up and running ASAP where the only teaching you need to do is how to run the simulation packages. I don’t want to have to teach them how to use and entirely new OS, and in the case of Linux, perhaps entirely new ways to write documents and make spreadsheets. This is especially true if the university course from the first year onwards has included access to MS Office, and has done teaching using those tools.&lt;/p&gt;
&lt;p&gt;By being able to now run many of these simulation packages through the Windows Bash Linux subsystem there are minimal hoops to jump through. All students now have easy access to a machine that can run the simulation programs, and without having to switch OS, or log into a dedicated UNIX server which is maintained for PhD and postdoc research. That lack of need to use a virtual machine, or emulator, also means much less impact on resources on personal machines, and less peculiarities with the allocation of computing resources on those machine. Furthermore, with respect to workflows, inputs and outputs from those simulation packages all can happen under the one roof of the Windows 10 OS, and lead to greater productivity.&lt;/p&gt;
&lt;p&gt;Bash in Windows 10 has trampled down a barrier which makes the use of the OS far more competitive, cost effective and productive for computational chemistry.&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/windows_bash_materials/</guid><pubDate>Thu, 03 Nov 2016 16:33:11 GMT</pubDate></item><item><title>A new member of the team: Mozhgan Kabiri Chimeh</title><link>http://rse.shef.ac.uk/blog/mozhgankch_intro/</link><dc:creator>Mozhgan Kabiri Chimeh</dc:creator><description>&lt;div&gt;&lt;p&gt;My name is &lt;strong&gt;Mozhgan Kabiri Chimeh&lt;/strong&gt; and I am a &lt;a href="http://www.rse.ac.uk/"&gt;Research Associate/Research Software Engineer&lt;/a&gt; who specialises in performance acceleration targeting Many-core and Multi-core architectures. Research is my passion and I have carefully developed my education with research and teaching in mind. I completed my PhD in computer science in 2016 at the University of Glasgow where my area of research was accelerating logic gate circuit simulation targeting heterogeneous architectures.  As part of my PhD project, I optimised and accelerated simulation algorithms and applied them to various parallel architectures (SIMD enabled machines, clusters, and GPUs). I have practical experience with parallel programming using High Performance Computing languages and models including OpenMP and CUDA.&lt;/p&gt;
&lt;p&gt;I am glad to be a part of RSE team as well as working as a researcher in Computer Graphic and simulation modelling group here at the University of Sheffield. Feel free to get in touch with me via my email address (m.kabiri-chimeh (at) sheffield.ac.uk) or my &lt;a href="https://uk.linkedin.com/in/mozhgankch"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When not working I divide my time between family, movie, artwork and macro-photography!&lt;/p&gt;&lt;/div&gt;</description><guid>http://rse.shef.ac.uk/blog/mozhgankch_intro/</guid><pubDate>Fri, 28 Oct 2016 08:09:22 GMT</pubDate></item></channel></rss>